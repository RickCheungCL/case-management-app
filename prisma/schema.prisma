// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Case {
  id                      String   @id @default(cuid())
  userId                  String
  user                    User     @relation(fields: [userId], references: [id])
  customerName            String
  projectDetails          String
  uploadToken             String   @default(uuid())
  status                  String   @default("New")
  photos                  Photo[]
  documents               Document[]
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt
  
  // New School Info Fields
  schoolName              String
  contactPerson           String
  emailAddress            String
  phoneNumber             String
  schoolAddress           String
  
  num2FtLinearHighBay     Int       @default(0)
  num150WUFOHighBay       Int       @default(0)
  num240WUFOHighBay       Int       @default(0)
  num2x2LEDPanel          Int       @default(0)
  num2x4LEDPanel          Int       @default(0)
  num1x4LEDPanel          Int       @default(0)
  num4FtStripLight        Int       @default(0)
  
  lightingPurpose         String
  facilitiesUsedIn        String
  installationService     String    // Yes / No / Not Sure
}
model Photo {
  id          String   @id @default(cuid())
  url         String
  caseId      String
  case        Case     @relation(fields: [caseId], references: [id])
  uploadedViaLink Boolean @default(false)
  comment     String?  // <-- New: comment under the photo
  customName  String?  // <-- New: editable photo name
  createdAt   DateTime @default(now())
}

model Document {
  id          String   @id @default(cuid())
  url         String
  fileName    String
  customName  String?  // <-- New: editable document name
  caseId      String
  case        Case     @relation(fields: [caseId], references: [id])
  uploadedViaLink Boolean @default(false)
  createdAt   DateTime @default(now())
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String?  // hashed
  role      Role     @default(USER)
  cases     Case[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


enum Role {
  ADMIN
  USER
}
